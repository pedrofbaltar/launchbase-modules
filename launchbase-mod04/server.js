const express = require('express')
const nunjucks = require('nunjucks')
const routes = require('./routes') // chamando o arquivo routes
const methodOverride = require('method-override') // chamando o 'method-override'

const server = express()

// middlewares, coisas que interceptam o ponto A ao ponto B colocando alguma funÃ§Ã£o ou configuraÃ§Ã£o no meio do caminho, no caso, no meio do caminho foi chamado a pasta public e a routes
server.use(express.urlencoded({ extended: true })) // essa linha Ã© resposÃ¡vel por fazer funcionar o req.body do formulÃ¡rio depois de enviados
server.use(express.static('public')) // middleware que chama a pasta public
server.use(methodOverride('_method')) // configurando o method-override, serve para sobreescrever o mÃ©todo que estamos usando, atravÃ©s dos middlewares, Ã© isso que o Override faz, sobreescreve por cima, e irÃ¡ sobreescrever o metodo correto
server.use(routes) // middleware que cahama as rotas

server.set('view engine', 'njk')

nunjucks.configure('views', {
    express: server,
    autoescape: false,
    noCache: true
})

server.listen(5000, () => {
    console.log('server is running ğŸš€') 
})